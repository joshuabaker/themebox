function pseudoGroup(...selectors) {
  return selectors.map((selector) => `[role=group]${selector}`).join(", ");
}

// prettier-ignore
export const pseudos = {
  _active: "&:active, &[data-active]",
  _activeLink: "&[aria-current=page]",
  _after: "&::after",
  _autofill: "&:-webkit-autofill",
  _before: "&::before",
  _checked: "&[aria-checked=true], &[data-checked]",
  _disabled: "&[disabled], &[aria-disabled=true], &[data-disabled]",
  _empty: "&:empty",
  _even: "&:nth-of-type(even)",
  _expanded: "&[aria-expanded=true], &[data-expanded]",
  _first: "&:first-of-type",
  _focus: "&:focus, &[data-focus]",
  _focusVisible: "&:focus-visible",
  _focusWithin: "&:focus-within",
  _fullScreen: "&:fullscreen",
  _grabbed: "&[aria-grabbed=true], &[data-grabbed]",
  _groupActive: pseudoGroup(":active", "[data-active]"),
  _groupChecked: pseudoGroup(":checked", "[data-checked]"),
  _groupDisabled: pseudoGroup(":disabled", "[data-disabled]"),
  _groupFocus: pseudoGroup(":focus", "[data-focus]"),
  _groupHover: pseudoGroup(":hover", "[data-hover]"),
  _groupInvalid: pseudoGroup(":invalid", "[data-invalid]"),
  _hidden: "&[hidden], &[data-hidden]",
  _highlighted: "&[data-highlighted]",
  _hover: "&:hover, &[data-hover]",
  _indeterminate: "&:indeterminate, &[aria-checked=mixed], &[data-indeterminate]",
  _invalid: "&[aria-invalid=true], &[data-invalid]",
  _last: "&:last-of-type",
  _loading: "&[data-loading], &[aria-busy=true]",
  _mediaDark: "@media (prefers-color-scheme: dark)",
  _notFirst: "&:not(:first-of-type)",
  _notLast: "&:not(:last-of-type)",
  _odd: "&:nth-of-type(odd)",
  _placeholder: "&::placeholder",
  _pressed: "&[aria-pressed=true], &[data-pressed]",
  _readOnly: "&[aria-readonly=true], &[readonly], &[data-readonly]",
  _rtl: "[dir=rtl] &",
  _selected: "&[aria-selected=true], &[data-selected]",
  _selection: "&::selection",
  _valid: "&[data-valid], &[data-state=valid]",
  _visited: "&:visited",
};
